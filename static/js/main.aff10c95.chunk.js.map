{"version":3,"sources":["data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Cart","memo","props","className","Table","responsive","hover","상품들","map","상품","index","상품명","가격","사이즈","수량","onClick","dispatch","type","데이터","alert창","connect","state","reducer","reducer2","Detail","lazy","재고context","React","createContext","신발카드","history","useHistory","데이터받아오기","push","src","i","width","로딩창","요청실패창","App","useState","Data","shoes","shoes변경","요청결과","요청결과변경","버튼숨김","버튼숨김변경","로딩","로딩변경","재고","재고변경","axios","get","then","result","data","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","Nav","Link","as","NavDropdown","Item","href","Divider","exact","path","Jumbotron","Button","variant","신발","setTimeout","catch","Provider","value","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","항목추가","액션","copy","찾은항목","find","obj","undefined","수량증가","수량감소","삭제","찾은인덱스","findIndex","splice","정렬","sort","next","prev","console","log","초기값","store","createStore","combineReducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aff10c95.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport default [\n  {\n    id: 0,\n    title: \"White and Black\",\n    content: \"Born in France\",\n    price: \"120,000\",\n  },\n\n  {\n    id: 1,\n    title: \"Red Knit\",\n    content: \"Born in Seoul\",\n    price: \"110,000\",\n  },\n\n  {\n    id: 2,\n    title: \"Grey Yordan\",\n    content: \"Born in the States\",\n    price: \"130,000\",\n  },\n];\n","import React, { memo } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nlet Cart = memo(function (props) {\n  return (\n    <main className=\"cart__container\">\n      <div className=\"cart__table\">\n        <Table responsive hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>상품명</th>\n              <th>가격(원)</th>\n              <th>사이즈</th>\n              <th>수량(개)</th>\n              <th>변경</th>\n              <th>삭제</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.상품들.map((상품, index) => {\n              return (\n                <tr key={index}>\n                  <td>{상품.id}</td>\n                  <td>{상품.상품명}</td>\n                  <td>{상품.가격} </td>\n                  <td>{상품.사이즈} </td>\n                  <td>{상품.수량} </td>\n\n                  <td>\n                    <button\n                      className=\"btn \"\n                      onClick={() => {\n                        props.dispatch({\n                          type: \"수량증가\",\n                          데이터: { id: 상품.id, 사이즈: 상품.사이즈 },\n                        });\n                      }}\n                    >\n                      +\n                    </button>\n                    <button\n                      className=\"btn \"\n                      onClick={() => {\n                        props.dispatch({\n                          type: \"수량감소\",\n                          데이터: { id: 상품.id, 사이즈: 상품.사이즈 },\n                        });\n                      }}\n                    >\n                      -\n                    </button>\n                  </td>\n                  <td>\n                    <i\n                      className=\"fas fa-trash-alt\"\n                      onClick={() =>\n                        props.dispatch({\n                          type: \"삭제\",\n                          데이터: { id: 상품.id },\n                        })\n                      }\n                    ></i>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        <button\n          className=\"btn btn__sort\"\n          onClick={() => {\n            props.dispatch({\n              type: \"정렬\",\n              데이터: props.상품들,\n            });\n          }}\n        >\n          정렬\n        </button>\n        {props.alert창 === true ? (\n          <div className=\"alert__text\">\n            <p>지금 구매하면 신규할인 20%</p>\n            <button\n              onClick={() => {\n                props.dispatch({ type: \"닫기\" });\n              }}\n            >\n              닫기\n            </button>\n          </div>\n        ) : null}\n      </div>\n    </main>\n  );\n});\n\nfunction props화시키기(state) {\n  return {\n    상품들: state.reducer,\n    alert창: state.reducer2,\n  };\n}\n\nexport default connect(props화시키기)(Cart);\n\n//export default Cart;\n","/*eslint-disable*/\n\nimport \"./App.css\";\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from \"react-bootstrap\";\nimport React, {\n  useState,\n  useContext,\n  lazy,\n  Suspense,\n  useEffect,\n  useRef,\n} from \"react\";\nimport Data from \"./data.js\";\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport \"./Detail.scss\";\nimport axios from \"axios\";\nimport Cart from \"./Cart.js\";\n\nlet Detail = lazy(() => {\n  return import(\"./Detail.js\");\n});\nexport let 재고context = React.createContext();\n\nfunction App() {\n  const [shoes, shoes변경] = useState(Data);\n  const [요청결과, 요청결과변경] = useState(true);\n  const [버튼숨김, 버튼숨김변경] = useState(false);\n  const [로딩, 로딩변경] = useState(false);\n  const [재고, 재고변경] = useState([10, 17, 2, 5, 9, 1]);\n\n  function 데이터받아오기() {\n    axios\n      .get(\"https://codingapple1.github.io/shop/data2.json\")\n      .then((result) => {\n        shoes변경([...shoes, ...result.data]);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>\n          <Link to=\"/\" className=\"Navbar__logo\">\n            ShoesShop\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto \">\n            <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/cart\">\n              Cart\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/detail/0\" onClick={데이터받아오기}>\n              Detail\n            </Nav.Link>\n\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>{\" \"}\n      {/* main */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"main__background \">\n            <h1>20% Season OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for\n              calling extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {shoes.map((신발, index) => {\n                return (\n                  <신발카드\n                    key={index}\n                    id={신발.id}\n                    title={신발.title}\n                    content={신발.content}\n                    i={index}\n                    데이터받아오기={데이터받아오기}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          {로딩 === true ? <로딩창 /> : null}\n\n          {버튼숨김 === false ? (\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                로딩변경(true);\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    setTimeout(() => {\n                      shoes변경([...shoes, ...result.data]);\n                      요청결과변경(true);\n                      버튼숨김변경(true);\n                      로딩변경(false);\n                    }, 1000);\n                  })\n                  .catch(() => {\n                    로딩변경(false);\n                    요청결과변경(false);\n                  });\n              }}\n            >\n              더보기\n            </button>\n          ) : null}\n\n          {\n            //\n            요청결과 === false ? <요청실패창 /> : null\n          }\n        </Route>\n\n        {/* detail */}\n\n        <Route path=\"/detail/:urlId\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중입니다.</div>}>\n              <Detail\n                shoes={shoes}\n                shoes변경={shoes변경}\n                버튼숨김변경={버튼숨김변경}\n                재고변경={재고변경}\n              />\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction 신발카드(props) {\n  let history = useHistory();\n\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        props.데이터받아오기();\n        history.push(\"/detail/\" + props.id);\n      }}\n    >\n      <img\n        src={\n          \"https://codingapple1.github.io/shop/shoes\" + (props.i + 1) + \".jpg\"\n        }\n        width=\"100%\"\n      />\n      <h4>{props.title}</h4>\n      <p>{props.content}</p>\n    </div>\n  );\n}\n\nfunction 로딩창() {\n  return (\n    <div>\n      <i className=\"fas fa-spinner icon__loading\"></i>\n    </div>\n  );\n}\n\nfunction 요청실패창() {\n  return (\n    <div className=\"axios__container\">\n      <div className=\"axios__alert\">요청에 실패했습니다.</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*eslint-disable*/\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers } from \"redux\";\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === \"닫기\") {\n    return false;\n  } else {\n    return state;\n  }\n}\n\nfunction 항목추가(state, 액션) {\n  const copy = [...state];\n  const 찾은항목 = copy.find((obj) => {\n    return obj.id === 액션.데이터.id && obj.사이즈 === 액션.데이터.사이즈;\n  });\n\n  if (찾은항목 === undefined) {\n    copy.push(액션.데이터);\n  } else {\n    찾은항목.수량++;\n  }\n  return copy;\n}\nfunction 수량증가(state, 액션) {\n  const copy = [...state];\n\n  const 찾은항목 = copy.find((obj) => {\n    return obj.id === 액션.데이터.id && obj.사이즈 === 액션.데이터.사이즈;\n  });\n  찾은항목.수량++;\n  return copy;\n}\n\nfunction 수량감소(state, 액션) {\n  let copy = [...state];\n  const 찾은항목 = copy.find((obj) => {\n    return obj.id === 액션.데이터.id && obj.사이즈 === 액션.데이터.사이즈;\n  });\n\n  if (찾은항목.수량 <= 0) {\n    찾은항목.수량 = 0;\n    return copy;\n  }\n  찾은항목.수량--;\n  return copy;\n}\n\nfunction 삭제(state, 액션) {\n  let copy = [...state];\n  const 찾은인덱스 = copy.findIndex((obj) => obj.id === 액션.데이터.id);\n  copy.splice(찾은인덱스, 1);\n  return copy;\n}\n\n// let arr = [\"l\", \"s\", \"m\"];\n// arr.sort((next, prev) => (next > prev ? -1 : 0));\n// console.log(arr);\n\nfunction 정렬(state) {\n  let copy = [...state];\n  copy.sort((next, prev) => {\n    if (prev.id > next.id) {\n      return -1;\n    } else if (prev.id === next.id && next.사이즈 > prev.사이즈) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n  console.log(copy);\n  return copy;\n}\n\nlet 초기값 = [];\n\nfunction reducer(state = 초기값, 액션) {\n  switch (액션.type) {\n    case \"항목추가\":\n      return 항목추가(state, 액션);\n\n    case \"수량증가\":\n      return 수량증가(state, 액션);\n\n    case \"수량감소\":\n      return 수량감소(state, 액션);\n\n    case \"삭제\":\n      return 삭제(state, 액션);\n\n    case \"정렬\":\n      return 정렬(state);\n\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n    ,\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}