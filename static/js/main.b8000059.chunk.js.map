{"version":3,"sources":["data.js","Cart.js","Location.js","LocalProducts.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Cart","memo","props","className","Table","responsive","hover","상품들","map","상품","index","상품명","가격","사이즈","주문수량","onClick","dispatch","type","데이터","남은재고","재고","alert창","connect","state","reducer","reducer2","Location","useEffect","container","document","getElementById","options","center","kakao","maps","LatLng","level","Map","markerPosition","Marker","position","setMap","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","displayMarker","locPosition","message","marker","iwContent","InfoWindow","removable","open","setCenter","href","RecentProducts","history","useHistory","불러온상품들","최근본상품","Card","style","width","Img","variant","src","Body","Title","Text","Button","push","LocalProducts","JSON","parse","localStorage","getItem","Detail","lazy","재고context","React","createContext","신발카드","i","로딩창","요청실패창","App","useState","Data","shoes","shoes변경","요청결과","요청결과변경","버튼숨김","버튼숨김변경","재고품절","재고품절변경","로딩","로딩변경","재고변경","location","useLocation","pathname","데이터불러오기","axios","get","then","result","resultData","data","obj","toLocaleString","filtered","splice","데이터자르기","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","Nav","Link","as","exact","path","Jumbotron","fontSize","신발","console","log","setTimeout","catch","Provider","value","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","항목추가","액션","copy","undefined","find","수량증가","찾은항목","수량감소","삭제","찾은인덱스","findIndex","정렬","sort","next","prev","초기값","store","createStore","combineReducers","ReactDOM","render"],"mappings":"mMAEe,GACb,CACEA,GAAI,EACJC,MAAO,kBACPC,QAAS,iBACTC,MAAO,WAGT,CACEH,GAAI,EACJC,MAAO,WACPC,QAAS,gBACTC,MAAO,WAGT,CACEH,GAAI,EACJC,MAAO,cACPC,QAAS,qBACTC,MAAO,Y,+DCjBPC,EAAOC,gBAAK,SAAUC,GACxB,OACE,uBAAMC,UAAU,2BAAhB,UACE,oBAAIA,UAAU,iCAAd,sCACA,sBAAKA,UAAU,kCAAf,UACE,eAACC,EAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,EAAvB,UACE,gCACE,+BACE,mCACA,oDACA,sDACA,oDACA,sDACA,8CACA,mDAGJ,gCACGJ,EAAMK,mBAAIC,KAAI,SAACC,EAAIC,GAClB,OACE,+BACE,6BAAKD,EAAGb,KACR,6BAAKa,EAAGE,qBACR,+BAAKF,EAAGG,aAAR,OACA,+BAAKH,EAAGI,mBAAR,OACA,+BAAKJ,EAAGK,yBAAR,OAEA,+BACE,wBACEX,UAAU,OACVY,QAAS,WACPb,EAAMc,SAAS,CACbC,KAAM,2BACNC,qBAAK,CACHtB,GAAIa,EAAGb,GACPiB,qBAAKJ,EAAGI,mBACRM,2BAAMjB,EAAMkB,iBARpB,eAeA,wBACEjB,UAAU,OACVY,QAAS,WACPb,EAAMc,SAAS,CACbC,KAAM,2BACNC,qBAAK,CAAEtB,GAAIa,EAAGb,GAAIiB,qBAAKJ,EAAGI,uBALhC,kBAYF,6BACE,mBACEV,UAAU,mBACVY,QAAS,kBACPb,EAAMc,SAAS,CACbC,KAAM,eACNC,qBAAK,CAAEtB,GAAIa,EAAGb,aAzCfc,WAmDjB,wBACEP,UAAU,gBACVY,QAAS,WACPb,EAAMc,SAAS,CACbC,KAAM,eACNC,qBAAKhB,EAAMK,sBALjB,2BAWkB,IAAjBL,EAAMmB,YACL,sBAAKlB,UAAU,cAAf,UACE,mGACA,wBACEY,QAAS,WACPb,EAAMc,SAAS,CAAEC,KAAM,kBAF3B,6BAQA,cAaGK,mBAPf,SAAmBC,GACjB,MAAO,CACLhB,qBAAKgB,EAAMC,QACXH,cAAQE,EAAME,YAIHH,CAAmBtB,GClCnB0B,MAzEf,WAgEE,OA/DAC,qBAAU,WACR,IAAIC,EAAYC,SAASC,eAAe,OACpCC,EAAU,CACZC,OAAQ,IAAIC,MAAMC,KAAKC,OAAO,UAAW,YACzCC,MAAO,GAGL5B,EAAM,IAAIyB,MAAMC,KAAKG,IAAIT,EAAWG,GACpCO,EAAiB,IAAIL,MAAMC,KAAKC,OAClC,mBACA,oBAOF,GALa,IAAIF,MAAMC,KAAKK,OAAO,CACjCC,SAAUF,IAELG,OAAOjC,GAEVkC,UAAUC,YAEZD,UAAUC,YAAYC,oBAAmB,SAAUJ,GACjD,IAAIK,EAAML,EAASM,OAAOC,SACxBC,EAAMR,EAASM,OAAOG,UAMxBC,EAJkB,IAAIjB,MAAMC,KAAKC,OAAOU,EAAKG,GACjC,qDAKT,CAMLE,EAHkB,IAAIjB,MAAMC,KAAKC,OAAO,UAAW,YACvC,mEAMd,SAASe,EAAcC,EAAaC,GAElC,IAAIC,EAAS,IAAIpB,MAAMC,KAAKK,OAAO,CACjC/B,IAAKA,EACLgC,SAAUW,IAGRG,EAAYF,EAIC,IAAInB,MAAMC,KAAKqB,WAAW,CACzCzD,QAASwD,EACTE,WALe,IASNC,KAAKjD,EAAK6C,GAGrB7C,EAAIkD,UAAUP,MAEf,IAGD,sBAAKhD,UAAU,eAAf,UACE,oBAAIA,UAAU,uCAAd,uCACA,qBAAKP,GAAG,QACR,mBAAGO,UAAU,oBAAb,uEACA,mBAAGwD,KAAK,kCAAR,oC,gBCrDN,SAASC,EAAe1D,GACtB,IAAI2D,EAAUC,cAEd,OAAqB,OAAjB5D,EAAM6D,qCAEN,qBAAK5D,UAAU,0CAAf,SACE,kGAMJ,mCACGD,EAAM6D,qCAAOvD,KAAI,SAACwD,EAAOtD,GACxB,OACE,qBAAKP,UAAU,0BAAf,SACE,eAAC8D,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACF,EAAA,EAAKG,IAAN,CACEC,QAAQ,MACRC,IACE,8CACEN,EAAMpE,GAAK,GACb,SAGJ,eAACqE,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,UAAaR,EAAMnE,QACnB,cAACoE,EAAA,EAAKQ,KAAN,UAAYT,EAAMlE,UAClB,eAACmE,EAAA,EAAKQ,KAAN,WAAYT,EAAMjE,MAAlB,YACA,cAAC2E,EAAA,EAAD,CACEvE,UAAU,MACVkE,QAAQ,SACRtD,QAAS,WACP8C,EAAQc,KAAK,WAAaX,EAAMpE,KAJpC,6CAdwCc,QAgCzCkE,MA9Df,SAAuB1E,GACrB,IAAI6D,EAASc,KAAKC,MAAMC,aAAaC,QAAQ,mCAE7C,OACE,uBAAM7E,UAAU,2CAAhB,UACE,oBAAIA,UAAU,uCAAd,8CACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,cAACyD,EAAD,CAAgBG,uCAAQA,YCQ9BkB,EAASC,gBAAK,WAChB,OAAO,gCAEEC,EAAYC,IAAMC,gBAsK7B,SAASC,EAAKpF,GACZ,IAAI2D,EAAUC,cAEd,OACE,sBACE3D,UAAU,WACVY,QAAS,WACP8C,EAAQc,KAAK,WAAazE,EAAMN,KAHpC,UAME,qBACE0E,IACE,6CAA+CpE,EAAMqF,EAAI,GAAK,OAEhEpB,MAAM,SAER,6BAAKjE,EAAML,QACX,4BAAIK,EAAMJ,aAKhB,SAAS0F,IACP,OACE,8BACE,mBAAGrF,UAAU,mCAKnB,SAASsF,IACP,OACE,qBAAKtF,UAAU,kBAAf,SACE,qBAAKA,UAAU,eAAf,2FAKSuF,IA1Mf,WACE,MAAyBC,mBAASC,GAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAuBH,oBAAS,GAAhC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAuBL,oBAAS,GAAhC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAuBP,oBAAS,GAAhC,mBAAOQ,EAAP,KAAaC,EAAb,KACA,EAAmBT,oBAAS,GAA5B,mBAAOU,EAAP,KAAWC,EAAX,KACA,EAAmBX,mBAAS,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,IAA9C,mBAAOvE,EAAP,KAAWmF,EAAX,KACMC,EAAWC,YAAY,CAAEC,SAAU,SAQzC,SAASC,IACPC,IACGC,IAAI,kDACJC,MAAK,SAACC,GACL,IAAMC,EAAaD,EAAOE,KAAKzG,KAAI,SAAC0G,GAElC,OADAA,EAAInH,MAAQmH,EAAInH,MAAMoH,iBACfD,KAGTpB,EAAQ,GAAD,mBAAKD,GAAL,YAAemB,QAc5B,OAXArF,qBAAU,WACkB,MAAtB6E,EAASE,WACE,IAATT,GACFC,GAAO,GArBb,WACE,IACMkB,EADW,YAAOvB,GACKwB,OAAO,EAAG,GACvCvB,EAAQsB,GAoBNE,IAC+B,oCAAtBd,EAASE,UAClBC,MAED,CAACH,IAGF,sBAAKrG,UAAU,MAAf,UACE,eAACoH,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACE,cAACF,EAAA,EAAOG,MAAR,UACE,cAAC,IAAD,CAAMC,GAAG,IAAIxH,UAAU,eAAvB,yBAIF,cAACoH,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBlI,GAAG,mBAApB,SACE,eAACmI,EAAA,EAAD,CAAK5H,UAAU,WAAf,UACE,cAAC4H,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAML,GAAG,IAAvB,oBAGA,cAACI,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAML,GAAG,YAAvB,6CAGA,cAACI,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAML,GAAG,QAAvB,sCAGA,cAACI,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAML,GAAG,kCAAvB,8CAGA,cAACI,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAML,GAAG,YAAvB,kCAON,eAAC,IAAD,WACE,eAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAlB,UACE,eAACC,EAAA,EAAD,CAAWjI,UAAU,oBAArB,UACE,oBAAI+D,MAAO,CAAEmE,SAAU,SAAvB,uBACA,2FACA,2DAEF,qBAAKlI,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACG0F,EAAMrF,KAAI,SAAC8H,EAAI5H,GACd,OACE,cAAC4E,EAAD,CAEE1F,GAAI0I,EAAG1I,GACPC,MAAOyI,EAAGzI,MACVC,QAASwI,EAAGxI,QACZyF,EAAG7E,GAJEA,WAUP,IAAP2F,EAAc,cAACb,EAAD,IAAU,MAEf,IAATS,EACC,wBACE9F,UAAU,kBACVY,QAAS,WACPuF,GAAK,GAELM,IACGC,IAAI,kDACJC,MAAK,SAACC,GACL,IAAMC,EAAaD,EAAOE,KAAKzG,KAAI,SAAC0G,GAElC,OADAA,EAAInH,MAAQmH,EAAInH,MAAMoH,iBACfD,KAETqB,QAAQC,IAAIxB,GACZyB,YAAW,WACT3C,EAAQ,GAAD,mBAAKD,GAAL,YAAemB,KACtBhB,GAAO,GACPE,GAAO,GACPI,GAAK,KACJ,QAEJoC,OAAM,WACLpC,GAAK,GACLN,GAAO,OAtBf,gCA4BE,MAIO,IAATD,EAAiB,cAACN,EAAD,IAAY,QAMjC,cAAC,IAAD,CAAO0C,KAAK,iBAAZ,SACE,cAAChD,EAAUwD,SAAX,CAAoBC,MAAOxH,EAA3B,SACE,cAAC,WAAD,CAAUyH,SAAU,wEAApB,SACE,cAAC,EAAD,CACElC,6CAASA,EACTd,MAAOA,EACPK,uCAAQA,EACRK,2BAAMA,EACNJ,2BAAMA,EACNC,uCAAQA,UAMhB,cAAC,IAAD,CAAO+B,KAAK,QAAZ,SACE,cAAC,EAAD,CAAMjC,uCAAQA,EAAQ9E,eAAIA,MAE5B,cAAC,IAAD,CAAO+G,KAAK,kCAAZ,SACE,cAAC,EAAD,CACEtC,MAAOA,EACPI,2BAAMA,EACNC,uCAAQA,MAGZ,cAAC,IAAD,CAAOiC,KAAK,YAAZ,SACE,cAAC,EAAD,c,0JC1KKW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,+BCcd,SAASO,EAAK/H,EAAOgI,GACnB,IAAMC,EAAI,YAAOjI,GAUjB,YALakI,IAJAD,EAAKE,MAAK,SAACxC,GACtB,OAAOA,EAAItH,KAAO2J,EAAGrI,mBAAItB,IAAMsH,EAAIrG,qBAAQ0I,EAAGrI,mBAAIL,uBAIlD2I,EAAK7E,KAAK4E,EAAGrI,oBAIRsI,EAET,SAASG,EAAKpI,EAAOgI,GACnB,IAAMpI,EAAOoI,EAAGrI,mBAAIC,yBAAKuI,MACvB,SAACtI,EAAIV,GAAL,OAAe6I,EAAGrI,mBAAItB,KAAOc,KAGzB8I,EAAI,YAAOjI,GAEXqI,EAAOJ,EAAKE,MAAK,SAACxC,GACtB,OAAOA,EAAItH,KAAO2J,EAAGrI,mBAAItB,IAAMsH,EAAIrG,qBAAQ0I,EAAGrI,mBAAIL,sBAGpD,OAAI+I,EAAK9I,0BAAQK,GAGjByI,EAAK9I,2BAFI0I,EAMX,SAASK,EAAKtI,EAAOgI,GACnB,IAAIC,EAAI,YAAOjI,GACTqI,EAAOJ,EAAKE,MAAK,SAACxC,GACtB,OAAOA,EAAItH,KAAO2J,EAAGrI,mBAAItB,IAAMsH,EAAIrG,qBAAQ0I,EAAGrI,mBAAIL,sBAGpD,OAAI+I,EAAK9I,0BAAQ,GACf8I,EAAK9I,yBAAO,EACL0I,IAETI,EAAK9I,2BACE0I,GAGT,SAASM,EAAGvI,EAAOgI,GACjB,IAAIC,EAAI,YAAOjI,GACTwI,EAAQP,EAAKQ,WAAU,SAAC9C,GAAD,OAASA,EAAItH,KAAO2J,EAAGrI,mBAAItB,MAExD,OADA4J,EAAKnC,OAAO0C,EAAO,GACZP,EAOT,SAASS,EAAG1I,GACV,IAAIiI,EAAI,YAAOjI,GAWf,OAVAiI,EAAKU,MAAK,SAACC,EAAMC,GACf,OAAIA,EAAKxK,GAAKuK,EAAKvK,IAERwK,EAAKxK,KAAOuK,EAAKvK,IAAMuK,EAAKtJ,mBAAMuJ,EAAKvJ,oBADxC,EAID,KAIJ2I,EAGT,IAAIa,EAAM,GAwBV,IAAIC,EAAQC,YAAYC,YAAgB,CAAEhJ,QAtB1C,WAAmC,IAAlBD,EAAiB,uDAAT8I,EAAKd,EAAI,uCAChC,OAAQA,EAAGtI,MACT,IAAK,2BACH,OAAOqI,EAAK/H,EAAOgI,GAErB,IAAK,2BACH,OAAOI,EAAKpI,EAAOgI,GAErB,IAAK,2BACH,OAAOM,EAAKtI,EAAOgI,GAErB,IAAK,eACH,OAAOO,EAAGvI,EAAOgI,GAEnB,IAAK,eACH,OAAOU,EAAG1I,GAEZ,QACE,OAAOA,IAIsCE,SAvGnD,WAAyC,IAAvBF,IAAsB,yDAAJgI,EAAI,uCACtC,MAAgB,iBAAZA,EAAGtI,MAGEM,MAqGXkJ,IAASC,OAEP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC5E,EAAA,EAAD,QAKJ7D,SAASC,eAAe,SAM1BgH,M","file":"static/js/main.b8000059.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport default [\n  {\n    id: 0,\n    title: \"White and Black\",\n    content: \"Born in France\",\n    price: \"120,000\",\n  },\n\n  {\n    id: 1,\n    title: \"Red Knit\",\n    content: \"Born in Seoul\",\n    price: \"110,000\",\n  },\n\n  {\n    id: 2,\n    title: \"Grey Yordan\",\n    content: \"Born in the States\",\n    price: \"130,000\",\n  },\n];\n","import React, { memo } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nlet Cart = memo(function (props) {\n  return (\n    <main className=\"장바구니\">\n      <h2 className=\"장바구니-title\">장바구니</h2>\n      <div className=\"장바구니__table\">\n        <Table responsive hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>상품명</th>\n              <th>가격(원)</th>\n              <th>사이즈</th>\n              <th>수량(개)</th>\n              <th>변경</th>\n              <th>삭제</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.상품들.map((상품, index) => {\n              return (\n                <tr key={index}>\n                  <td>{상품.id}</td>\n                  <td>{상품.상품명}</td>\n                  <td>{상품.가격} </td>\n                  <td>{상품.사이즈} </td>\n                  <td>{상품.주문수량} </td>\n\n                  <td>\n                    <button\n                      className=\"btn \"\n                      onClick={() => {\n                        props.dispatch({\n                          type: \"수량증가\",\n                          데이터: {\n                            id: 상품.id,\n                            사이즈: 상품.사이즈,\n                            남은재고: props.재고,\n                          },\n                        });\n                      }}\n                    >\n                      +\n                    </button>\n                    <button\n                      className=\"btn \"\n                      onClick={() => {\n                        props.dispatch({\n                          type: \"수량감소\",\n                          데이터: { id: 상품.id, 사이즈: 상품.사이즈 },\n                        });\n                      }}\n                    >\n                      -\n                    </button>\n                  </td>\n                  <td>\n                    <i\n                      className=\"fas fa-trash-alt\"\n                      onClick={() =>\n                        props.dispatch({\n                          type: \"삭제\",\n                          데이터: { id: 상품.id },\n                        })\n                      }\n                    ></i>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        <button\n          className=\"btn btn__sort\"\n          onClick={() => {\n            props.dispatch({\n              type: \"정렬\",\n              데이터: props.상품들,\n            });\n          }}\n        >\n          정렬\n        </button>\n        {props.alert창 === true ? (\n          <div className=\"alert__text\">\n            <p>지금 구매하면 신규할인 20%</p>\n            <button\n              onClick={() => {\n                props.dispatch({ type: \"닫기\" });\n              }}\n            >\n              닫기\n            </button>\n          </div>\n        ) : null}\n      </div>\n    </main>\n  );\n});\n\nfunction props화시키기(state) {\n  return {\n    상품들: state.reducer,\n    alert창: state.reducer2,\n  };\n}\n\nexport default connect(props화시키기)(Cart);\n\n//export default Cart;\n","/*global kakao*/\nimport React, { useEffect } from \"react\";\n\nfunction Location() {\n  useEffect(() => {\n    var container = document.getElementById(\"map\");\n    var options = {\n      center: new kakao.maps.LatLng(37.247698, 127.049412),\n      level: 3,\n    };\n\n    var map = new kakao.maps.Map(container, options);\n    var markerPosition = new kakao.maps.LatLng(\n      37.365264512305174,\n      127.10676860117488\n    );\n    var marker = new kakao.maps.Marker({\n      position: markerPosition,\n    });\n    marker.setMap(map);\n\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n\n        var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n          message = '<div style=\"padding:5px;\">Shoes shop</div>'; // 인포윈도우에 표시될 내용입니다\n\n        // 마커와 인포윈도우를 표시합니다\n        displayMarker(locPosition, message);\n      });\n    } else {\n      // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n      var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n        message = \"geolocation을 사용할수 없어요..\";\n\n      displayMarker(locPosition, message);\n    }\n\n    // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n    function displayMarker(locPosition, message) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: locPosition,\n      });\n\n      var iwContent = message, // 인포윈도우에 표시할 내용\n        iwRemoveable = true;\n\n      // 인포윈도우를 생성합니다\n      var infowindow = new kakao.maps.InfoWindow({\n        content: iwContent,\n        removable: iwRemoveable,\n      });\n\n      // 인포윈도우를 마커위에 표시합니다\n      infowindow.open(map, marker);\n\n      // 지도 중심좌표를 접속위치로 변경합니다\n      map.setCenter(locPosition);\n    }\n  }, []);\n\n  return (\n    <div className=\"위치\">\n      <h2 className=\"상세페이지-title\">오시는 길</h2>\n      <div id=\"map\"></div>\n      <p className=\"위치-text\">주소 : xx시 xx구 xx동 OOO번지</p>\n      <a href=\"https://map.kakao.com/link/to/0\">길찾기</a>\n    </div>\n  );\n}\nexport default Location;\n","import { Card, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nfunction LocalProducts(props) {\n  let 불러온상품들 = JSON.parse(localStorage.getItem(\"최근본상품\"));\n\n  return (\n    <main className=\"최근본상품-container\">\n      <h2 className=\"최근본상품-title\">최근 본 상품</h2>\n      <div className=\"container\">\n        <div className=\"row \">\n          <RecentProducts 불러온상품들={불러온상품들} />\n        </div>\n      </div>\n    </main>\n  );\n}\n\nfunction RecentProducts(props) {\n  let history = useHistory();\n\n  if (props.불러온상품들 === null) {\n    return (\n      <div className=\"최근본상품-subtitle\">\n        <p>조회한 상품이 없습니다.</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {props.불러온상품들.map((최근본상품, index) => {\n        return (\n          <div className=\"col-lg-4 col-md-6 mt-5 \" key={index}>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={\n                  \"https://codingapple1.github.io/shop/shoes\" +\n                  (+최근본상품.id + 1) +\n                  \".jpg\"\n                }\n              />\n              <Card.Body>\n                <Card.Title>{최근본상품.title}</Card.Title>\n                <Card.Text>{최근본상품.content}</Card.Text>\n                <Card.Text>{최근본상품.price}원</Card.Text>\n                <Button\n                  className=\"btn\"\n                  variant=\"danger\"\n                  onClick={() => {\n                    history.push(\"/detail/\" + 최근본상품.id);\n                  }}\n                >\n                  구매하기\n                </Button>\n              </Card.Body>\n            </Card>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default LocalProducts;\n","/*eslint-disable*/\n\nimport \"./App.css\";\nimport { Navbar, Nav, Jumbotron } from \"react-bootstrap\";\nimport React, {\n  useState,\n  useContext,\n  lazy,\n  Suspense,\n  useEffect,\n  useRef,\n} from \"react\";\nimport Data from \"./data.js\";\nimport { Link, Route, Switch, useHistory, useLocation } from \"react-router-dom\";\nimport \"./Detail.scss\";\nimport axios from \"axios\";\nimport Cart from \"./Cart.js\";\nimport Location from \"./Location.js\";\nimport LocalProducts from \"./LocalProducts.js\";\n\nlet Detail = lazy(() => {\n  return import(\"./Detail.js\");\n});\nexport let 재고context = React.createContext();\n\nfunction App() {\n  const [shoes, shoes변경] = useState(Data);\n  const [요청결과, 요청결과변경] = useState(true);\n  const [버튼숨김, 버튼숨김변경] = useState(false);\n  const [재고품절, 재고품절변경] = useState(false);\n  const [로딩, 로딩변경] = useState(false);\n  const [재고, 재고변경] = useState([10, 17, 2, 5, 9, 1]);\n  const location = useLocation({ pathname: \"/App\" });\n\n  function 데이터자르기() {\n    const newShoesArr = [...shoes];\n    const filtered = newShoesArr.splice(0, 3);\n    shoes변경(filtered);\n  }\n\n  function 데이터불러오기() {\n    axios\n      .get(\"https://codingapple1.github.io/shop/data2.json\")\n      .then((result) => {\n        const resultData = result.data.map((obj) => {\n          obj.price = obj.price.toLocaleString();\n          return obj;\n        });\n\n        shoes변경([...shoes, ...resultData]);\n      });\n  }\n  useEffect(() => {\n    if (location.pathname === \"/\") {\n      if (버튼숨김 === true) {\n        버튼숨김변경(false);\n      }\n      데이터자르기();\n    } else if (location.pathname === \"/최근본상품\") {\n      데이터불러오기();\n    }\n  }, [location]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>\n          <Link to=\"/\" className=\"Navbar__logo\">\n            PAUL JOCK\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto \">\n            <Nav.Link as={Link} to=\"/\">\n              홈\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/detail/0\">\n              상세 페이지\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/cart\">\n              장바구니\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/최근본상품\">\n              최근 본 상품\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/location\">\n              위치\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      {/* main */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"main__background \">\n            <h1 style={{ fontSize: \"100px\" }}>PAUL JOCK</h1>\n            <h2>새신을 신고 뛰어보자 </h2>\n            <h4> run in our new shoes.</h4>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {shoes.map((신발, index) => {\n                return (\n                  <신발카드\n                    key={index}\n                    id={신발.id}\n                    title={신발.title}\n                    content={신발.content}\n                    i={index}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          {로딩 === true ? <로딩창 /> : null}\n\n          {버튼숨김 === false ? (\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                로딩변경(true);\n\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    const resultData = result.data.map((obj) => {\n                      obj.price = obj.price.toLocaleString();\n                      return obj;\n                    });\n                    console.log(resultData);\n                    setTimeout(() => {\n                      shoes변경([...shoes, ...resultData]);\n                      요청결과변경(true);\n                      버튼숨김변경(true);\n                      로딩변경(false);\n                    }, 500);\n                  })\n                  .catch(() => {\n                    로딩변경(false);\n                    요청결과변경(false);\n                  });\n              }}\n            >\n              더보기\n            </button>\n          ) : null}\n\n          {\n            //\n            요청결과 === false ? <요청실패창 /> : null\n          }\n        </Route>\n\n        {/* detail */}\n\n        <Route path=\"/detail/:urlId\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중입니다.</div>}>\n              <Detail\n                데이터불러오기={데이터불러오기}\n                shoes={shoes}\n                버튼숨김변경={버튼숨김변경}\n                재고변경={재고변경}\n                재고품절={재고품절}\n                재고품절변경={재고품절변경}\n              />\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart 버튼숨김변경={버튼숨김변경} 재고={재고} />\n        </Route>\n        <Route path=\"/최근본상품\">\n          <LocalProducts\n            shoes={shoes}\n            버튼숨김={버튼숨김}\n            버튼숨김변경={버튼숨김변경}\n          />\n        </Route>\n        <Route path=\"/location\">\n          <Location />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction 신발카드(props) {\n  let history = useHistory();\n\n  return (\n    <div\n      className=\"col-lg-4\"\n      onClick={() => {\n        history.push(\"/detail/\" + props.id);\n      }}\n    >\n      <img\n        src={\n          \"https://codingapple1.github.io/shop/shoes\" + (props.i + 1) + \".jpg\"\n        }\n        width=\"100%\"\n      />\n      <h4>{props.title}</h4>\n      <p>{props.content}</p>\n    </div>\n  );\n}\n\nfunction 로딩창() {\n  return (\n    <div>\n      <i className=\"fas fa-spinner icon__loading\"></i>\n    </div>\n  );\n}\n\nfunction 요청실패창() {\n  return (\n    <div className=\"axios-container\">\n      <div className=\"axios__alert\">데이터 요청에 실패했습니다.</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*eslint-disable*/\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers } from \"redux\";\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === \"닫기\") {\n    return false;\n  } else {\n    return state;\n  }\n}\n\nfunction 항목추가(state, 액션) {\n  const copy = [...state];\n  const 찾은항목 = copy.find((obj) => {\n    return obj.id === 액션.데이터.id && obj.사이즈 === 액션.데이터.사이즈;\n  });\n\n  if (찾은항목 === undefined) {\n    copy.push(액션.데이터);\n  } else {\n    // 찾은항목.주문수량++;\n  }\n  return copy;\n}\nfunction 수량증가(state, 액션) {\n  const 남은재고 = 액션.데이터.남은재고.find(\n    (재고, index) => 액션.데이터.id === index\n  );\n\n  const copy = [...state];\n\n  const 찾은항목 = copy.find((obj) => {\n    return obj.id === 액션.데이터.id && obj.사이즈 === 액션.데이터.사이즈;\n  });\n\n  if (찾은항목.주문수량 >= 남은재고) {\n    return copy;\n  }\n  찾은항목.주문수량++;\n  return copy;\n}\n\nfunction 수량감소(state, 액션) {\n  let copy = [...state];\n  const 찾은항목 = copy.find((obj) => {\n    return obj.id === 액션.데이터.id && obj.사이즈 === 액션.데이터.사이즈;\n  });\n\n  if (찾은항목.주문수량 <= 0) {\n    찾은항목.주문수량 = 0;\n    return copy;\n  }\n  찾은항목.주문수량--;\n  return copy;\n}\n\nfunction 삭제(state, 액션) {\n  let copy = [...state];\n  const 찾은인덱스 = copy.findIndex((obj) => obj.id === 액션.데이터.id);\n  copy.splice(찾은인덱스, 1);\n  return copy;\n}\n\n// let arr = [\"l\", \"s\", \"m\"];\n// arr.sort((next, prev) => (next > prev ? -1 : 0));\n//\n\nfunction 정렬(state) {\n  let copy = [...state];\n  copy.sort((next, prev) => {\n    if (prev.id > next.id) {\n      return -1;\n    } else if (prev.id === next.id && next.사이즈 > prev.사이즈) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n\n  return copy;\n}\n\nlet 초기값 = [];\n\nfunction reducer(state = 초기값, 액션) {\n  switch (액션.type) {\n    case \"항목추가\":\n      return 항목추가(state, 액션);\n\n    case \"수량증가\":\n      return 수량증가(state, 액션);\n\n    case \"수량감소\":\n      return 수량감소(state, 액션);\n\n    case \"삭제\":\n      return 삭제(state, 액션);\n\n    case \"정렬\":\n      return 정렬(state);\n\n    default:\n      return state;\n  }\n}\n\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  // </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}